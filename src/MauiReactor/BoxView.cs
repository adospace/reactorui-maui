// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor;
public partial interface IBoxView : IView
{
}

public partial class BoxView<T> : View<T>, IBoxView where T : Microsoft.Maui.Controls.BoxView, new()
{
    public BoxView(Action<T?>? componentRefAction = null) : base(componentRefAction)
    {
        BoxViewStyles.Default?.Invoke(this);
    }

    partial void OnBeginAnimate();
    partial void OnEndAnimate();
    protected override void OnThemeChanged()
    {
        if (ThemeKey != null && BoxViewStyles.Themes.TryGetValue(ThemeKey, out var styleAction))
        {
            styleAction(this);
        }

        base.OnThemeChanged();
    }

    partial void Migrated(VisualNode newNode);
    protected override void OnMigrated(VisualNode newNode)
    {
        Migrated(newNode);
        base.OnMigrated(newNode);
    }
}

public partial class BoxView : BoxView<Microsoft.Maui.Controls.BoxView>
{
    public BoxView(Action<Microsoft.Maui.Controls.BoxView?>? componentRefAction = null) : base(componentRefAction)
    {
    }

    public BoxView(params IEnumerable<VisualNode?>? children)
    {
        if (children != null)
        {
            this.AddChildren(children);
        }
    }
}

public static partial class BoxViewExtensions
{
    public static T Color<T>(this T boxView, Microsoft.Maui.Graphics.Color color)
        where T : IBoxView
    {
        //boxView.Color = color;
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.ColorProperty, color);
        return boxView;
    }

    public static T Color<T>(this T boxView, Func<Microsoft.Maui.Graphics.Color> colorFunc, IComponentWithState? componentWithState = null)
        where T : IBoxView
    {
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.ColorProperty, new PropertyValue<Microsoft.Maui.Graphics.Color>(colorFunc, componentWithState));
        return boxView;
    }

    public static T CornerRadius<T>(this T boxView, Microsoft.Maui.CornerRadius cornerRadius, RxCornerRadiusAnimation? customAnimation = null)
        where T : IBoxView
    {
        //boxView.CornerRadius = cornerRadius;
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, cornerRadius);
        boxView.AppendAnimatable(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, customAnimation ?? new RxSimpleCornerRadiusAnimation(cornerRadius));
        return boxView;
    }

    public static T CornerRadius<T>(this T boxView, Func<Microsoft.Maui.CornerRadius> cornerRadiusFunc, IComponentWithState? componentWithState = null)
        where T : IBoxView
    {
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, new PropertyValue<Microsoft.Maui.CornerRadius>(cornerRadiusFunc, componentWithState));
        return boxView;
    }

    public static T CornerRadius<T>(this T boxView, double uniformRadius, RxCornerRadiusAnimation? customAnimation = null)
        where T : IBoxView
    {
        //boxView.CornerRadius = new CornerRadius(uniformRadius);
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, new CornerRadius(uniformRadius));
        boxView.AppendAnimatable(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, customAnimation ?? new RxSimpleCornerRadiusAnimation(new CornerRadius(uniformRadius)));
        return boxView;
    }

    public static T CornerRadius<T>(this T boxView, double topLeft, double topRight, double bottomLeft, double bottomRight, RxCornerRadiusAnimation? customAnimation = null)
        where T : IBoxView
    {
        //boxView.CornerRadius = new CornerRadius(topLeft, topRight, bottomLeft, bottomRight);
        boxView.SetProperty(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, new CornerRadius(topLeft, topRight, bottomLeft, bottomRight));
        boxView.AppendAnimatable(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, customAnimation ?? new RxSimpleCornerRadiusAnimation(new CornerRadius(topLeft, topRight, bottomLeft, bottomRight)));
        return boxView;
    }
}

public static partial class BoxViewStyles
{
    public static Action<IBoxView>? Default { get; set; }
    public static Dictionary<string, Action<IBoxView>> Themes { get; } = [];
}